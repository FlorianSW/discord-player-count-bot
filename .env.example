# Specifies the provider used to obtain player count information.
# Can be one of the following values:
#  - steam
#  - steam-query
#  - battleye
#  - cftools_cloud
#  - battlemetrics
PLAYER_COUNT_PROVIDER=steam-query

# Steam API provider specific
STEAM_API_TOKEN=
GAME_ADDRESS=

# Steam Query provider specific
GAME_TYPE=
GAME_IP=
GAME_QUERY_PORT=

# BattlEye RCon provider specific
BE_RCON_HOST=
BE_RCON_PORT=2302
BE_RCON_PASSWORD=
BE_RCON_MAX_PLAYERS=40

# Battlemetrics provider specific
# The access token can be obtained from: https://www.battlemetrics.com/developers
BM_ACCESS_TOKEN=
# Server ID is the ID of the server in the URL of the server status page, e.g. from https://www.battlemetrics.com/servers/squad/14622768
# 14622768 would be the server id.
BM_SERVER_ID=

# CFTools Cloud provider specific
CFTOOLS_HOSTNAME=
CFTOOLS_PORT=

# Discord settings
# Token of the bot user to use to publish game server information (required)
DISCORD_TOKEN=
# Optional channel ID where a status message shall be posted by the bot. Make sure the bot has permission to write
# and update messages in this channel. The status message might not contain all information depending on the player
# count provider, the game and the used game server.
DISCORD_MESSAGE_CHANNEL_ID=


# Message formats
# You can define your own message formats for the player count display in the user list in Discord.
# Following variables are available:
#  - playerCount: The current player count on the server
#  - maxPlayers: The maximum number of players that can be on the server
#  - queuedPlayersMessage: The message as defined in DISCORD_PUBLISHER_MESSAGE_QUEUED_FORMAT (only makes sense when the server supports a player queue
#  - queuedPlayers: The number of players currently in the queue
# Example (uncomment if editing):
# DISCORD_PUBLISHER_MESSAGE_FORMAT='${playerCount}/${maxPlayers} ${queuedPlayersMessage}'
# DISCORD_PUBLISHER_MESSAGE_QUEUED_FORMAT='(+${queuedPlayers})'
